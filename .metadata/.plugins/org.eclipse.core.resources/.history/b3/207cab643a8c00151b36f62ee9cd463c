package com.example.executeandroidtest;


import java.util.LinkedList;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.Spinner;


public class MainActivity extends Activity {

	public static final String TAG = "ExtcuteAndroidTest";
	
	public static final String TestDirPath = "/storage/sdcard0/executeAndroidTest/";
	public static final String TestResPath = TestDirPath + "TestResources";
	public static final String TestLogPath = TestDirPath + "TestLog";
	public static final String TestScriptPath = TestDirPath + "TestScript";
	
	public static FileManager fileManager = new FileManager();
	
	public static LinkedList<String> testCaseList = new LinkedList<String>();
	
	private Button startButton;
	private CheckBox selectAll, deleteLog;
	private Spinner spinner_RunMode, spinner_RunTime;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        spinner_RunMode=(Spinner)findViewById(R.id.spinner_RunMode);
        //createFromResouce将返回ArrayAdapter<CharSequence>，具有三个参数：
        //第一个是context，也就是application的环境，可以设置为this，也可以通过getContext()获取.
        //第二个参数是从data source中的array ID，也就是我们在strings中设置的ID号；
        //第三个参数是spinner未展开的UI格式
        ArrayAdapter<CharSequence> adapter_0 = ArrayAdapter.createFromResource( this, R.array.RunMode_array, android.R.layout.simple_spinner_item);
        adapter_0.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner_RunMode.setAdapter(adapter_0);
        
        spinner_RunTime=(Spinner)findViewById(R.id.spinner_RunTime);
        ArrayAdapter<CharSequence> adapter_1 = ArrayAdapter.createFromResource( this, R.array.RunTime_array, android.R.layout.simple_spinner_item);
        adapter_1.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner_RunTime.setAdapter(adapter_1);
        
        selectAll = (CheckBox)findViewById(R.id.selectAll);
        deleteLog = (CheckBox)findViewById(R.id.deleteLog);
        startButton = (Button)findViewById(R.id.startButton);
        
        //读取TestcaseConfig.cfg，得到测试例列表
        
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    
	public boolean LoadConfigFlie(String Path)
	{
		Log.v(TAG, "Begin to LoadConfigFlie");
		testCaseList.clear();
		String filecontext = fileManager.readFromSDcard(Path);
		if(filecontext == null || filecontext.equals("") )
		{
			Log.e(TAG, "LoadConfigFlie error");
			return false;
		}
		//按行分割
		String[] arrayline = filecontext.split("\n");
		if(arrayline == null || arrayline.equals("")||arrayline.length<=0)
		{
			Log.e(TAG, "LoadConfigFlie Testcase is none");
			return false;
		}
		
		for(int i=0;i<arrayline.length;i++)
		{
			//首先查找AutoRun项
			if(!bgotAutoRun)
			{
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					//检测头部
					if(endindex-startindex>1 && arrayline[i].substring(startindex, endindex).indexOf(Global.Lable_AutoRun)>=0)
					{
						String reslstr = arrayline[i].substring(arrayline[i].indexOf("=")+1,arrayline[i].indexOf("]")).trim();
						Log.v(TAG, "LoadConfigFlie gotAutoRun = "+reslstr);
						int result = Integer.parseInt(reslstr);
						if(result != 0) gbAutoRun = true;
						else gbAutoRun = false;
						bgotAutoRun = true;
					}else break;
				}
			}else if(!bgotAllExeTime)
			{
				//获取AllExeTime
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					if(endindex-startindex>1 && arrayline[i].substring(startindex, endindex).indexOf(Global.Lable_AllExeTime)>=0)
					{
						String reslstr = arrayline[i].substring(arrayline[i].indexOf("=")+1,arrayline[i].indexOf("]")).trim();
						Log.v(TAG, "LoadConfigFlie bgotAllExeTime = "+reslstr);
						giAllExeTime = Integer.parseInt(reslstr);
						bgotAllExeTime = true;
					}else break;
				}
			}else if(!bgotSeqType)
			{
				//获取AllExeTime
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					if(endindex-startindex>1 && arrayline[i].substring(startindex, endindex).indexOf(Global.Lable_ExeSeqType)>=0)
					{
						String reslstr = arrayline[i].substring(arrayline[i].indexOf("=")+1,arrayline[i].indexOf("]")).trim();
						Log.v(TAG, "LoadConfigFlie bgotSeqType = "+reslstr);
						gRiskSeqType = Integer.parseInt(reslstr);
						bgotSeqType = true;
					}else break;
				}
			}else if(!bgotTimeType)
			{
				//获取AllExeTime
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					if(endindex-startindex>1 && arrayline[i].substring(startindex, endindex).indexOf(Global.Lable_ExeTimeType)>=0)
					{
						String reslstr = arrayline[i].substring(arrayline[i].indexOf("=")+1,arrayline[i].indexOf("]")).trim();
						Log.v(TAG, "LoadConfigFlie bgotTimeType = "+reslstr);
						gRiskTimeType = Integer.parseInt(reslstr);
						bgotTimeType = true;
					}else break;
				}
			}else if(!bgotFTPIP)
			{
				//获取AllExeTime
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					if(endindex-startindex>1 && arrayline[i].substring(startindex, endindex).indexOf(Global.Lable_FTPIP)>=0)
					{
						String reslstr = arrayline[i].substring(arrayline[i].indexOf("=")+1,arrayline[i].indexOf("]")).trim();
						Log.v(TAG, "LoadConfigFlie bgotFTPIP = "+reslstr);
						ftpUrl = reslstr;
						bgotFTPIP = true;
					}else break;
				}
			}else if(!bgotCallNO)
			{
				//获取AllExeTime
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					if(endindex-startindex>1 && arrayline[i].substring(startindex, endindex).indexOf(Global.Lable_CALLNO)>=0)
					{
						String reslstr = arrayline[i].substring(arrayline[i].indexOf("=")+1,arrayline[i].indexOf("]")).trim();
						Log.v(TAG, "LoadConfigFlie gCallNO = "+reslstr);
						gCallNO = reslstr;
						bgotCallNO = true;
					}else break;
				}
			}else if(!bgotSmsNO)
			{
				//获取AllExeTime
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					if(endindex-startindex>1 && arrayline[i].substring(startindex, endindex).indexOf(Global.Lable_SMSNO)>=0)
					{
						String reslstr = arrayline[i].substring(arrayline[i].indexOf("=")+1,arrayline[i].indexOf("]")).trim();
						Log.v(TAG, "LoadConfigFlie gSmsNO = "+reslstr);
						gSmsNO = reslstr;
						bgotSmsNO = true;
					}else break;
				}
			}else
			{
				//下面为用例获取的用例信息
				Global.TestcaseInfo tmp = new Global.TestcaseInfo();
				tmp.InputList.clear();
				int infoindex = 0;
				int startindex = 0;
				int endindex = 0;
				while(startindex>=0 && endindex>=0)
				{
					startindex = arrayline[i].indexOf("[",endindex);
					if(startindex<endindex) break;
					endindex = arrayline[i].indexOf("]",startindex);
					if(endindex<startindex) break;
					
					if(endindex-startindex<=1) break;
						
					String cutstr = arrayline[i].substring(startindex+1, endindex);
					
					if(infoindex == 0) tmp.TestcaseNo = cutstr; //用例编号
					else if(infoindex == 1)tmp.TestcaseDesc = cutstr;//用例描述
					else if(infoindex == 2)tmp.PackageSh = cutstr;//脚本名或者包名
					else if(infoindex == 3)	tmp.SelectState = cutstr;//选择状态
					else tmp.InputList.addLast(cutstr);
					infoindex ++;
				}
				if(infoindex>= 4)
				{
					tmp.TestcaseResult = false;//初始时用例都为fail
					gTestCaseList.addLast(tmp);
				}
			}
		}
		Log.v(TAG, "LoadConfigFlie leave");
		if(!bgotAllExeTime || !bgotAutoRun || !bgotSeqType || !bgotTimeType || !bgotFTPIP || !bgotCallNO || !bgotSmsNO)
		{
			Log.e(TAG, "LoadConfigFlie bgotAllExeTime or bgotAutoRun get fail");
			return false;
		}else return true;
	}
}
